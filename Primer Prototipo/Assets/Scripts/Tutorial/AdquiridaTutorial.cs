//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
using UnityEngine.UI;

public class AdquiridaTutorial : MonoBehaviour{

	//Flecha apuntando al boton
	public GameObject flecha_boton;

	//Boton para crear personaje
	public GameObject boton_personaje;

	//Panel de informacion 
	public GameObject panelInfo;

	//Texto del panelInfo
	public Text info_macrofago;

	//Panel Contenedor
	public GameObject panelPrincipal;

	//Panel Victoria
	public GameObject panelPrincipal_victoria;

	//Panel Celula Infectada
	public GameObject panelPrincipal_ceulainfe;

	//Panel Derrota
	public GameObject panelPrincipal_derrota;

	//Texto guia 
	public Text text_guia;

	public int index_guia;

	public string nombrePersonaje;
	
	// Use this for initialization
	void Start () {

		index_guia = 3;

		NotificationCenter.DefaultCenter ().AddObserver (this, "celulaMuerta");
		NotificationCenter.DefaultCenter ().AddObserver (this, "TerminarTutorial");
		NotificationCenter.DefaultCenter ().AddObserver (this, "CambiarGuiaDendritica");
	
	}
	
	public void cambiarPanelPrincipal(int num){
		
		switch (num) 
		{

		case 1:
			break;

		
		case 2:
			//Ir a Adquirida
			Destroy(GameObject.Find("Canvas"));
			Destroy(GameObject.Find("Creador"));
			Application.LoadLevel("Adquirida");
			break;
		
			//Ir a Menu Adquirida
		case 3:
			//Ir a Menu Principal
			ControladorMenu.in_tutorial=true;
			Destroy(GameObject.Find("Canvas"));
			Destroy(GameObject.Find("Creador"));
			Application.LoadLevel(0);
			break;
		
		//Repetir Desafio
		case 4:
			//Ir a Menu Principal
			Destroy(GameObject.Find("Canvas"));
			Destroy(GameObject.Find("Creador"));
			Application.LoadLevel(Application.loadedLevel);
			break;

		//ArrancarDesafio
		case 5:

			break;
			
		case 6:

			break;
			
		case 7:
		
			break;
			
		}
	}

	void celulaMuerta(Notification notification)
	{	

		if (!this.enabled) {
		
			Debug.Log("adquirda");	
			StartCoroutine(Wait());
		}
			
		
	}
	
	
	IEnumerator Wait(){
		
		yield return new WaitForSeconds(2);
		panelPrincipal.SetActive (true);
		panelPrincipal_victoria.SetActive (false);
		panelPrincipal_ceulainfe.SetActive (true);
		boton_personaje.GetComponent<Button>().interactable=false;
		text_guia.transform.parent.gameObject.SetActive(false);
		panelInfo.SetActive (false);
		flecha_boton.SetActive (false);
		Time.timeScale = 0;
	}

	void TerminarTutorial(Notification notification)
	{	
		QuitarSonidos ();
		text_guia.transform.parent.gameObject.SetActive(false);
		panelInfo.SetActive (false);
		panelPrincipal.SetActive (true);
		panelPrincipal_victoria.SetActive (true);
		
	}
	
	public void QuitarSonidos(){
		
		GameObject [] celulas = GameObject.FindGameObjectsWithTag ("celula");
		Camera.main.transform.FindChild ("Audio Source").gameObject.SetActive (false);
		foreach (GameObject celu in celulas) {
			
			celu.GetComponent<AudioSource> ().enabled = false;
			
		}
	}

	void CambiarGuiaDendritica(Notification notification)
	{	
		Debug.Log ((int)notification.data);
		if (index_guia == (int)notification.data) {
			
		
			if (index_guia == 3) 
				text_guia.text="Presiona click derecho sobre la célula dendrítica  para alertar el Ganglio Linfático";
			
			if (index_guia == 4) {
				
				text_guia.text="Ahora la célula dendrítica se dirige al Ganglio Linfático";

			}
			if (index_guia == 5) {

				panelInfo.SetActive(true);
				text_guia.text=PlayerPrefs.GetString("name")+ " Espera que el ganglio haga su trabajo";

			}
			if (index_guia == 6) {

				info_macrofago.text="Ahora los "+nombrePersonaje+" están disponibles";
				text_guia.text="Presiona click izquierdo para crear un "+nombrePersonaje;
				flecha_boton.SetActive(true);

			}

			index_guia++;	
		}
	}
}


